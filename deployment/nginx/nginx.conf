# Ubuntu Health Nginx Configuration
# Community-driven load balancing with Ubuntu philosophy integration

# Main nginx configuration optimized for Ubuntu Health community
user nginx;
worker_processes auto;
error_log /var/log/nginx/ubuntu_health_error.log warn;
pid /var/run/nginx.pid;

# Ubuntu community-inspired worker configuration
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic configuration with Ubuntu Health optimizations
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Ubuntu Health custom log format
    log_format ubuntu_community '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               'ubuntu_session="$cookie_ubuntu_session" '
                               'community_id="$cookie_community_id" '
                               'elder_blessing="$cookie_elder_blessing"';
    
    access_log /var/log/nginx/ubuntu_health_access.log ubuntu_community;
    
    # Performance optimizations for community healing
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;  # Large files for traditional healing content
    
    # Gzip compression for Ubuntu wisdom content
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting for community protection
    limit_req_zone $binary_remote_addr zone=ubuntu_community:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ubuntu_api:10m rate=5r/s;
    
    # Ubuntu Health upstream services
    upstream ubuntu_frontend {
        least_conn;  # Community-balanced load distribution
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream ubuntu_backend {
        least_conn;
        server backend:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream ubuntu_wisdom {
        least_conn;
        server ubuntu_wisdom:3001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream ubuntu_traditional_healing {
        least_conn;
        server traditional_healing:3002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Main Ubuntu Health server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name ubuntu-health.org www.ubuntu-health.org localhost;
        
        # Security headers with Ubuntu philosophy
        add_header X-Ubuntu-Philosophy "I am because we are" always;
        add_header X-Community-Healing "Enabled" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options nosniff always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Redirect HTTP to HTTPS for secure community healing
        return 301 https://$server_name$request_uri;
    }
    
    # HTTPS Ubuntu Health server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ubuntu-health.org www.ubuntu-health.org localhost;
        
        # SSL configuration for secure Ubuntu community
        ssl_certificate /etc/nginx/ssl/ubuntu-health.crt;
        ssl_certificate_key /etc/nginx/ssl/ubuntu-health.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers for Ubuntu community protection
        add_header X-Ubuntu-Philosophy "I am because we are" always;
        add_header X-Community-Healing "Enabled" always;
        add_header X-Elder-Blessing "Active" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options nosniff always;
        
        # Rate limiting for community protection
        limit_req zone=ubuntu_community burst=20 nodelay;
        
        # Frontend routes - Ubuntu Health React/Next.js application
        location / {
            proxy_pass http://ubuntu_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Ubuntu-Community "true";
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            
            # Timeout settings for community patience
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # API routes - Ubuntu Health backend services
        location /api/ {
            limit_req zone=ubuntu_api burst=10 nodelay;
            
            proxy_pass http://ubuntu_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Ubuntu-API "true";
            proxy_set_header X-Community-Request "true";
            
            # Extended timeouts for community consensus
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # Socket.IO for real-time community interactions
        location /socket.io/ {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Ubuntu-Realtime "true";
            
            # WebSocket timeouts for continuous community connection
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
        
        # Ubuntu Wisdom Service
        location /ubuntu-wisdom/ {
            proxy_pass http://ubuntu_wisdom/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Elder-Wisdom "true";
            
            # Respectful timeouts for ancestral knowledge
            proxy_connect_timeout 90s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;
        }
        
        # Traditional Healing Service
        location /traditional-healing/ {
            proxy_pass http://ubuntu_traditional_healing/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Traditional-Medicine "true";
            proxy_set_header X-Cultural-Sensitivity "required";
            
            # Sacred knowledge access timeouts
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # IPFS Gateway for decentralized Ubuntu knowledge
        location /ipfs/ {
            proxy_pass http://ipfs:8080/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Decentralized-Knowledge "true";
            
            # Large file timeouts for community content
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Health check endpoint for Ubuntu community monitoring
        location /health {
            access_log off;
            add_header X-Ubuntu-Health "Community thriving" always;
            return 200 "Ubuntu Health Community is thriving\n";
        }
        
        # Static assets with community caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|svg|woff|woff2|ttf|eot)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            add_header X-Ubuntu-Asset "Community resource" always;
            try_files $uri =404;
        }
        
        # Robots.txt for search engine Ubuntu community discovery
        location = /robots.txt {
            add_header X-Ubuntu-Discovery "Welcome to our healing community" always;
            return 200 "User-agent: *\nAllow: /\nSitemap: https://ubuntu-health.org/sitemap.xml\n";
        }
        
        # Security.txt for responsible Ubuntu community disclosure
        location = /.well-known/security.txt {
            add_header X-Ubuntu-Security "Community protection enabled" always;
            return 200 "Contact: security@ubuntu-health.org\nExpires: 2025-12-31T23:59:59.000Z\nEncryption: https://ubuntu-health.org/pgp-key.txt\nPreferred-Languages: en, zu, xh, af\n";
        }
        
        # Block access to sensitive Ubuntu configuration files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup and temporary files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Monitoring and metrics endpoint for Ubuntu community health
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
            add_header X-Ubuntu-Monitoring "Community health metrics" always;
        }
        
        location /health {
            access_log off;
            add_header X-Ubuntu-Status "Nginx serving community" always;
            return 200 "Ubuntu Health Nginx: Serving community with Ubuntu philosophy\n";
        }
    }
}
